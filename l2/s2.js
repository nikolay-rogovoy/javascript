"use strict";

let i = 0;
if (1 + 1 == 2)
    i++;

let username;
if (username == null)       // Ес­ли пе­ре­мен­ная username рав­на null или undefined,
    username = 'John Doe';  // оп­ре­де­лить ее

if (!username) username = `John Doe`;

let address;
if (!address) {
    address = '';
    message = 'По­жа­луй­ста, ука­жи­те поч­то­вый ад­рес.';
}


// Вторая форма инструкции

if (username == null)
    username = 'John Doe';
else
    username = 'Doe John';

if (n == 1)
    console.log("По­лу­че­но 1 но­вое со­об­ще­ние.");
else
    console.log("По­лу­че­но " + n + " но­вых со­об­ще­ний.");



i = j = 1;
k = 2;
if (i == j) {
    if (j == k) {
        console.log("i рав­но k");
    }
    else {
        console.log("i не рав­но j"); // НЕ­ПРА­ВИЛЬ­НО!!
    }
}
if (i == j) {
    if (j == k)
        console.log("i рав­но k");
    else
        console.log("i не рав­но j"); // Вот как!
}


if (i == j) {
    if (j == k) {
        console.log("i рав­но k");
    }
}
else { // Вот ка­кая раз­ни­ца воз­ни­ка­ет из-за до­бав­ле­ния фи­гур­ных ско­бок!
    console.log("i не рав­но j");
}



if (n == 1) {
    // Вы­пол­нить блок 1
}
else if (n == 2) {
    // Вы­пол­нить блок 2
}
else if (n == 3) {
    // Вы­пол­нить блок 3
}
else {
    // Ес­ли ни од­на из пре­ды­ду­щих ин­ст­рук­ций else не бы­ла вы­пол­не­на, вы­пол­нить блок 4
}

// Стиль else if пред­поч­ти­тель­нее и по­нят­нее за­пи­си в син­так­си­че­ски эк­ви­ва­лент­ной фор­ме,
// пол­но­стью по­ка­зы­ваю­щей вло­жен­ность ин­ст­рук­ций:
if (n == 1) {
    // Вы­пол­нить блок 1
}
else {
    if (n == 2) {
        // Вы­пол­нить блок 2
    }
    else {
        if (n == 3) {
            // Вы­пол­нить блок 3
        }
        else {
            // Ес­ли ни од­на из пре­ды­ду­щих ин­ст­рук­ций else
            // не бы­ла вы­пол­не­на, вы­пол­нить блок 4
        }
    }
}


// 
switch (n) {
    case 1:
        break;
}



switch (n) {
    case 1:    // Вы­пол­ня­ет­ся, ес­ли n === 1
        // Вы­пол­нить блок 1.
        break; // Здесь ос­та­но­вить­ся
    case 2:    // Вы­пол­ня­ет­ся, ес­ли n === 2
        // Вы­пол­нить блок 2.
        break; // Здесь ос­та­но­вить­ся
    case 3:    // Вы­пол­ня­ет­ся, ес­ли n === 3
        // Вы­пол­нить блок 3.
        break; // Здесь ос­та­но­вить­ся
    case 4:    // Вы­пол­ня­ет­ся, ес­ли n === 3
        // Вы­пол­нить блок 3.
        return '4'; // Здесь ос­та­но­вить­ся
    default:   // Ес­ли все ос­таль­ное не под­хо­дит...
        // Вы­пол­нить блок 4.
        break; // Здесь ос­та­но­вить­ся
}

function convert(x) {
    switch (typeof x) {
        case 'number':              // Пре­об­ра­зо­вать чис­ло в ше­ст­на­дца­те­рич­ное це­лое
            return x.toString(16);
        case 'string':              // Вер­нуть стро­ку, за­клю­чен­ную в ка­выч­ки
            return '"' + x + '"';
        default:                    // Лю­бой дру­гой тип пре­об­ра­зу­ет­ся обыч­ным спо­со­бом
            return x.toString()
    }
}


// Циклы
while (1 = 1)
    n++;

// Безконечный цикл
while (true);

let count = 0;
while (count < 10) {
    console.log(count);
    count++;
}
// i, j, k

// Инструкция do/while

do
    ;
while (1 + 1 == 3);

// Пример
function printArray(a) {
    var len = a.length, i = 0;
    if (len == 0)
        console.log("Пус­той мас­сив");
    else {
        do {
            console.log(a[i]);
        } while (++i < len);
    }
}

// Инструкция for
/*
for(ини­циа­ли­за­ция; про­вер­ка; ин­кре­мент)
    ин­ст­рук­ция
*/

/*
эк­ви­ва­лент­ный цикл while
while(про­вер­ка) {
    ин­ст­рук­ция;
    ин­кре­мент;
}
*/
/**
for(ини­циа­ли­за­ция; про­вер­ка; ин­кре­мент)
    ин­ст­рук­ция
 */
for (let i = 0; i < 10; i++) {
    console.log(count);
}

let ii = 0;
while (ii < 10) {
    ;
    i++;
}

for (let ii = 0, jj = 10; ii < 10; ii++, jj--) {
    console.log(ii * jj);
}

function tail(o) {                           // Воз­вра­ща­ет по­след­ний эле­мент в спи­ске o
    for (; o.next; o = o.next) /* пус­тое */; // Вы­пол­нять об­ход, по­ка o.next
    return o;                            // яв­ля­ет­ся ис­тин­ным зна­че­ни­ем
}

// Безконечный цикл
for (; ;);

// Инструкция for/in
/**
for (пе­ре­мен­ная in объ­ект)
    ин­ст­рук­ция

 */

for (let i = 0; i < a.length; i++)   // При­сваи­вать ин­дек­сы в мас­си­ве пе­ре­мен­ной i
    console.log(a[i]);               // Вы­вес­ти зна­че­ние ка­ж­до­го эле­мен­та мас­си­ва

for (let p in o)                     // При­сваи­вать име­на свойств объ­ек­та o пе­ре­мен­ной p
    console.log(o[p]);               // Вы­вес­ти зна­че­ние ка­ж­до­го свой­ст­ва

let o = { x: 1, y: 2, z: 3 };
let a = [];
let iii = 0;
for (a[iii++] in o) /* пус­тое те­ло цик­ла */;


// Перечисление индексов массивов
for (i in [1, 3, 4]) console.log(i);

for (elem of [1, 3, 4]) {
    if (elem === 3) {
        continue;
    }
    console.log(i);
}

try {
    try {
        throw new Error('Some Err');

    }
    catch (err) {
        throw new Error('Some Err');
    }
}
catch (err) {
    console.error(err);
}



