"use strict"
/**
 ++             | Пре­фикс­ный и пост­фикс­ный ин­кре­мент
–               | Пре­фикс­ный и пост­фикс­ный дек­ре­мент
-               | Унар­ный ми­нус
+               | Пре­об­ра­зо­ва­ние в чис­ло
~               | По­раз­ряд­ная ин­вер­сия
!               | Ло­ги­че­ская ин­вер­сия
delete          | Уда­ле­ние свой­ст­ва
typeof          | Оп­ре­де­ле­ние ти­па опе­ран­да
void            | Воз­врат не­оп­ре­де­лен­но­го зна­че­ния
*, /, %         | Ум­но­же­ние, де­ле­ние, де­ле­ние по мо­ду­лю
+, -            | Сло­же­ние, вы­чи­та­ние
+               | Кон­ка­те­на­ция строк
<<              | Сдвиг вле­во
>>              | Сдвиг впра­во с со­хра­не­ни­ем зна­ка
>>>             | Сдвиг впра­во с за­пол­не­ни­ем ну­ля­ми
<, <=, >, >=    | Срав­не­ние чи­сло­вых зна­че­ний
<, <=, >, >=    | Срав­не­ние строк
instanceof      | Про­вер­ка на при­над­леж­ность клас­су
in              | Про­вер­ка на­ли­чия свой­ст­ва
==              | Про­вер­ка ра­вен­ст­ва
!=              | Про­вер­ка не­ра­вен­ст­ва
===             | Про­вер­ка иден­тич­но­сти
!==             | Про­вер­ка не­иден­тич­но­сти
&               | По­раз­ряд­ное И
^               | По­раз­ряд­ное ИС­КЛЮ­ЧАЮ­ЩЕЕ ИЛИ
|               | По­раз­ряд­ное ИЛИ
&&              | Ло­ги­че­ское И
||              | Ло­ги­че­ское ИЛИ
?:              | Вы­бор вто­ро­го или третье­го опе­ран­да
=               | При­сваи­ва­ние пе­ре­мен­ной или свой­ст­ву
*=, /=, %=,     | Опе­ра­ция с при­сваи­ва­ни­ем
+=, -=, &=,     | 
^=, |=, <<=,    | 
>>=, >>>=       | 
,               | От­бро­сить пер­вый опе­ранд, вер­нуть вто­рой

 */

function oper() {
    console.log('oper: ', 2 + 2 * 2);
    console.log('oper: ', (2 + 2) * 2);
}

oper();


/***/
function variables() {
    // Допустимые имена переменных
    let $commision;
    let someVariable;
    let product_Store;
    let income2;
    let myIncome_from_deposit;
    // Ошибочные имена: 222lol, @someVariable, my%percent, await, break, case, catch, class, const, continue, debugger, default, delete, do, else, enum, export, extends, false, finally, for, function, if, import, in, instanceof, new, null, return, super, switch, this, throw, true, try, typeof, var, void, while, with, yield

    // Две разные переменные
    let username;
    let userName;

    // Через запятую можно определить сразу несколько переменных
    let a, b, c;
}

variables();

function consts() {
    const username = 'Tom';
    // username = 'Bob'; // ошибка, username - константа, поэтому мы не можем изменить ее значение
    // const username2; // ошибка, username2 не инициализирована

    const obj = { name: 'Иван' };
    obj.name = 'Петр'; // Допустимо
    // obj = { name: 'Николай' }; // Недопустимо, ссылка является константой

}

consts();

